pkgbase=php70
_pkgbase=php
pkgname=('php70'
                 'php70-apache'
                 'php70-cgi'
                 'php70-fpm'
                 'php70-embed'
                 'php70-enchant'
                 'php70-gd'
                 'php70-intl'
                 'php70-ldap'
                 'php70-mcrypt'
                 'php70-odbc'
                 'php70-pear'
                 'php70-pgsql'
                 'php70-pspell'
                 'php70-snmp'
                 'php70-sqlite'
                 'php70-tidy'
                 'php70-xsl')

pkgver=7.0.1
pkgrel=1
arch=('i686' 'x86_64')
license=('PHP')
url='http://www.php.net'
makedepends=('apache' 'c-client' 'postgresql-libs' 'libldap' 'postfix'
             'sqlite' 'unixodbc' 'net-snmp' 'libzip' 'enchant' 'file' 'freetds'
             'libmcrypt' 'tidyhtml' 'aspell' 'libltdl' 'gd' 'icu'
             'curl' 'libxslt' 'openssl' 'db' 'gmp' 'systemd')

source=("http://us2.php.net/distributions/php-${pkgver}.tar.xz"
        'php.ini.patch' 'apache.conf'
        'php-fpm.service' 'php-fpm.tmpfiles')
md5sums=('23aba67d57d53145becacb982ed498d5'
         '89189d3051708dcf1687d0288e7c4118'
         '3bdf401291d4de96caa33d053a000e46'
         'efd879749e4feb23a2f149a6699c2774'
         '75a73f9dd5f416555a5daf66877d8b16')
validpgpkeys=('6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3')

# prefix for most paths
prefix=opt/php70

prepare() {
        cd ${srcdir}/${_pkgbase}-${pkgver}

        patch -p0 -i ${srcdir}/php.ini.patch
        # Just because our Apache 2.4 is configured with a threaded MPM by default does not mean we want to build a ZTS PHP.
        # Let's supress this behaviour and build a SAPI that works fine with the prefork MPM.
        sed '/APACHE_THREADED_MPM=/d' -i sapi/apache2handler/config.m4 -i configure
}

build() {
        local _phpconfig="--srcdir=../${_pkgbase}-${pkgver} \
                --config-cache \
                --prefix=/${prefix}/usr \
                --sbindir=/${prefix}/usr/bin \
                --sysconfdir=/${prefix}/etc/php \
                --localstatedir=/${prefix}/var \
                --with-layout=GNU \
                --with-config-file-path=/${prefix}/etc/php \
                --with-config-file-scan-dir=/${prefix}/etc/php/conf.d \
                --disable-rpath \
                --mandir=/${prefix}/usr/share/man \
                --with-kerberos \
                --with-libedit \
                "

        local _phpextensions="--enable-bcmath=shared \
                --enable-calendar=shared \
                --enable-dba=shared \
                --enable-exif=shared \
                --enable-ftp=shared \
                --enable-gd-native-ttf \
                --enable-intl=shared \
                --enable-mbstring \
                --enable-mysqlnd \
                --enable-opcache \
                --enable-phar=shared \
                --enable-posix=shared \
                --enable-shmop=shared \
                --enable-soap=shared \
                --enable-sockets=shared \
                --enable-sysvmsg=shared \
                --enable-sysvsem=shared \
                --enable-sysvshm=shared \
                --enable-zip=shared \
                --enable-phpdbg \
                --with-bz2=shared \
                --with-curl=shared \
                --with-db4=/usr \
                --with-enchant=shared,/usr \
                --with-fpm-systemd \
                --with-freetype-dir=/usr \
                --with-xpm-dir=/usr \
                --with-gd=shared,/usr \
                --with-gdbm \
                --with-gettext=shared \
                --with-gmp=shared \
                --with-iconv=shared \
                --with-icu-dir=/usr \
                --with-imap-ssl \
                --with-imap=shared \
                --with-jpeg-dir=/usr \
                --with-ldap=shared \
                --with-ldap-sasl \
                --with-libzip \
                --with-mcrypt=shared \
                --with-mhash \
                --with-mysql-sock=/run/mysqld/mysqld.sock \
                --with-mysqli=shared,mysqlnd \
                --with-openssl=shared \
                --with-pcre-regex=/usr \
                --with-pdo-mysql=shared,mysqlnd \
                --with-pdo-odbc=shared,unixODBC,/usr \
                --with-pdo-pgsql=shared \
                --with-pdo-sqlite=shared,/usr \
                --with-pgsql=shared \
                --with-png-dir=/usr \
                --with-pspell=shared \
                --with-snmp=shared \
                --with-sqlite3=shared,/usr \
                --with-tidy=shared \
                --with-unixODBC=shared,/usr \
                --with-xmlrpc=shared \
                --with-xsl=shared \
                --with-zlib \
                "

        EXTENSION_DIR=/${prefix}/usr/lib/php/modules
        export EXTENSION_DIR
        PEAR_INSTALLDIR=/${prefix}/usr/share/pear
        export PEAR_INSTALLDIR

        cd ${srcdir}/${_pkgbase}-${pkgver}

        # php
        mkdir -p ${srcdir}/build-php
        cd ${srcdir}/build-php
        ln -sf ../${_pkgbase}-${pkgver}/configure
        ./configure ${_phpconfig} \
                --without-pear \
                --disable-cgi \
                --enable-pcntl \
                ${_phpextensions}
        make

        # php-pear
        # reuse the previous run; this will save us a lot of time
        cp -a ${srcdir}/build-php ${srcdir}/build-pear
        cd ${srcdir}/build-pear
        ./configure ${_phpconfig} \
                --with-pear \
                ${_phpextensions}
        make

        # cgi and fcgi
        # reuse the previous run; this will save us a lot of time
        cp -a ${srcdir}/build-php ${srcdir}/build-cgi
        cd ${srcdir}/build-cgi
        ./configure ${_phpconfig} \
                --disable-cli \
                --enable-cgi \
                ${_phpextensions}
        make

        # apache
        cp -a ${srcdir}/build-php ${srcdir}/build-apache
        cd ${srcdir}/build-apache
        ./configure ${_phpconfig} \
                --disable-cli \
                --with-apxs2 \
                ${_phpextensions}
        make

        # fpm
        cp -a ${srcdir}/build-php ${srcdir}/build-fpm
        cd ${srcdir}/build-fpm
        ./configure ${_phpconfig} \
                --disable-cli \
                --enable-fpm \
                --with-fpm-user=http \
                --with-fpm-group=http \
                ${_phpextensions}
        make

        # embed
        cp -a ${srcdir}/build-php ${srcdir}/build-embed
        cd ${srcdir}/build-embed
        ./configure ${_phpconfig} \
                --disable-cli \
                --enable-embed=shared \
                ${_phpextensions}
        make
}

check() {
       cd ${srcdir}/build-php
       export SNMP_TIMEOUT=1
       export SNMP_RETRIES=0
       export NO_INTERACTION=1
       make test
       echo
}

package_php70() {
        pkgdesc='An HTML-embedded scripting language'
        depends=('pcre' 'libxml2' 'curl' 'libzip' 'c-client' 'libedit')
        backup=("${prefix}/etc/php/php.ini")
        provides=("php70=${pkgver}")
        cd ${srcdir}/build-php
        make -j1 INSTALL_ROOT=${pkgdir} install
        install -d -m755 ${pkgdir}/${prefix}/usr/share/pear
        # install php.ini
        install -D -m644 ${srcdir}/${_pkgbase}-${pkgver}/php.ini-production ${pkgdir}/${prefix}/etc/php/php.ini
        install -d -m755 ${pkgdir}/${prefix}/etc/php/conf.d/

        # remove static modules
        rm -f ${pkgdir}${EXTENSION_DIR}/*.a
        # remove modules provided by sub packages
        rm -f ${pkgdir}${EXTENSION_DIR}/{enchant,gd,intl,ldap,mcrypt,odbc,pdo_odbc,pgsql,pdo_pgsql,pspell,snmp,sqlite3,pdo_sqlite,tidy,xsl}.so
        # remove empty directory
        rmdir ${pkgdir}/${prefix}/usr/include/php/include
        rmdir ${pkgdir}/${prefix}/var/{log,run}
        # fix broken link
#       ln -sf phar.phar ${pkgdir}/${prefix}/usr/bin/phar

        # Create symlink
        install -d ${pkgdir}/usr/bin
        ln -sf /${prefix}/usr/bin/php ${pkgdir}/usr/bin/php70
}

package_php70-cgi() {
        pkgdesc='CGI and FCGI SAPI for PHP'
        depends=("php70=${pkgver}")
        provides=("php70-cgi=${pkgver}")

        install -D -m755 ${srcdir}/build-cgi/sapi/cgi/php-cgi ${pkgdir}/${prefix}/usr/bin/php-cgi
}

package_php70-apache() {
        pkgdesc='Apache SAPI for PHP'
        depends=("php70=${pkgver}" 'apache')
        backup=('etc/httpd/conf/extra/php7_module.conf')
        provides=("php70-apache=${pkgver}")

        install -D -m755 ${srcdir}/build-apache/libs/libphp7.so ${pkgdir}/usr/lib/httpd/modules/libphp70.so
        install -D -m644 ${srcdir}/apache.conf ${pkgdir}/etc/httpd/conf/extra/php70_module.conf
}

package_php70-fpm() {
        pkgdesc='FastCGI Process Manager for PHP'
        depends=("php70=${pkgver}" 'systemd')
        backup=("${prefix}/etc/php/php-fpm.conf")
        install='php-fpm.install'
        provides=("php70-fpm=${pkgver}")

        install -D -m755 ${srcdir}/build-fpm/sapi/fpm/php-fpm ${pkgdir}/${prefix}/usr/bin/php-fpm
        install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.8 ${pkgdir}/${prefix}/usr/share/man/man8/php-fpm.8
        install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.conf ${pkgdir}/${prefix}/etc/php/php-fpm.conf
        install -d -m755 ${pkgdir}/${prefix}/etc/php/php-fpm.d
        install -D -m644 ${srcdir}/build-fpm/sapi/fpm/www.conf ${pkgdir}/${prefix}/etc/php/php-fpm.d/www.conf
        sed -i "s/listen =.*/listen = \/run\/php70-fpm\/php-fpm.sock/" ${pkgdir}/${prefix}/etc/php/php-fpm.d/www.conf
        install -D -m644 ${srcdir}/php-fpm.tmpfiles ${pkgdir}/usr/lib/tmpfiles.d/php70-fpm.conf
        install -D -m644 ${srcdir}/php-fpm.service ${pkgdir}/usr/lib/systemd/system/php70-fpm.service
}

package_php70-embed() {
        pkgdesc='Embedded PHP SAPI library'
        depends=("php70=${pkgver}")
        provides=("php70-embed=${pkgver}")

        install -D -m755 ${srcdir}/build-embed/libs/libphp7.so ${pkgdir}/usr/lib/libphp70.so
        install -D -m644 ${srcdir}/${_pkgbase}-${pkgver}/sapi/embed/php_embed.h ${pkgdir}/${prefix}/usr/include/php/sapi/embed/php_embed.h
}

package_php70-pear() {
        pkgdesc='PHP Extension and Application Repository'
        depends=("php70=${pkgver}")
        backup=("${prefix}/etc/php/pear.conf")

        cd ${srcdir}/build-pear
        make install-pear INSTALL_ROOT=${pkgdir}
        rm -rf ${pkgdir}/${prefix}/usr/share/pear/.{channels,depdb,depdblock,filemap,lock,registry}
}

package_php70-enchant() {
        pkgdesc='enchant module for PHP'
        depends=("php70=${pkgver}" 'enchant')
        provides=("php70-enchant=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=enchant.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/enchant.ini
        install -D -m755 ${srcdir}/build-php/modules/enchant.so ${pkgdir}/${prefix}/usr/lib/php/modules/enchant.so
}

package_php70-gd() {
        pkgdesc='gd module for PHP'
        depends=("php70=${pkgver}" 'gd')
        provides=("php70-gd=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=gd.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/gd.ini
        install -D -m755 ${srcdir}/build-php/modules/gd.so ${pkgdir}/${prefix}/usr/lib/php/modules/gd.so
}

package_php70-intl() {
        pkgdesc='intl module for PHP'
        depends=("php70=${pkgver}" 'icu')
        provides=("php70-intl=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=intl.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/intl.ini
        install -D -m755 ${srcdir}/build-php/modules/intl.so ${pkgdir}/${prefix}/usr/lib/php/modules/intl.so
}

package_php70-ldap() {
        pkgdesc='ldap module for PHP'
        depends=("php70=${pkgver}" 'libldap')
        provides=("php70-ldap=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=ldap.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/ldap.ini
        install -D -m755 ${srcdir}/build-php/modules/ldap.so ${pkgdir}/${prefix}/usr/lib/php/modules/ldap.so
}

package_php70-mcrypt() {
        pkgdesc='mcrypt module for PHP'
        depends=("php70=${pkgver}" 'libmcrypt' 'libltdl')
        provides=("php70-mcrypt=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=mcrypt.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/mcrypt.ini
        install -D -m755 ${srcdir}/build-php/modules/mcrypt.so ${pkgdir}/${prefix}/usr/lib/php/modules/mcrypt.so
}


package_php70-odbc() {
        pkgdesc='ODBC modules for PHP'
        depends=("php70=${pkgver}" 'unixodbc')
        provides=("php70-odbc=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=odbc.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/odbc.ini
        echo "extension=pdo_odbc.so" >> ${pkgdir}/${php_prefix}/etc/php/conf.d/odbc.ini
        install -D -m755 ${srcdir}/build-php/modules/odbc.so ${pkgdir}/${prefix}/usr/lib/php/modules/odbc.so
        install -D -m755 ${srcdir}/build-php/modules/pdo_odbc.so ${pkgdir}/${prefix}/usr/lib/php/modules/pdo_odbc.so
}

package_php70-pgsql() {
        pkgdesc='PostgreSQL modules for PHP'
        depends=("php70=${pkgver}" 'postgresql-libs')
        provides=("php70-pgsql=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=pgsql.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/pgsql.ini
        echo "extension=pdo_pgsql.so" >> ${pkgdir}/${php_prefix}/etc/php/conf.d/pgsql.ini
        install -D -m755 ${srcdir}/build-php/modules/pgsql.so ${pkgdir}/${prefix}/usr/lib/php/modules/pgsql.so
        install -D -m755 ${srcdir}/build-php/modules/pdo_pgsql.so ${pkgdir}/${prefix}/usr/lib/php/modules/pdo_pgsql.so
}

package_php70-pspell() {
        pkgdesc='pspell module for PHP'
        depends=("php70=${pkgver}" 'aspell')
        provides=("php70-pspell=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=pspell.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/pspell.ini
        install -D -m755 ${srcdir}/build-php/modules/pspell.so ${pkgdir}/${prefix}/usr/lib/php/modules/pspell.so
}

package_php70-snmp() {
        pkgdesc='snmp module for PHP'
        depends=("php70=${pkgver}" 'net-snmp')
        provides=("php70-snmp=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=snmp.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/snmp.ini
        install -D -m755 ${srcdir}/build-php/modules/snmp.so ${pkgdir}/${prefix}/usr/lib/php/modules/snmp.so
}

package_php70-sqlite() {
        pkgdesc='sqlite module for PHP'
        depends=("php70=${pkgver}" 'sqlite')
        provides=("php70-sqlite=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=sqlite3.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/sqlite.ini
        echo "extension=pdo_sqlite.so" >> ${pkgdir}/${php_prefix}/etc/php/conf.d/sqlite.ini
        install -D -m755 ${srcdir}/build-php/modules/sqlite3.so ${pkgdir}/${prefix}/usr/lib/php/modules/sqlite3.so
        install -D -m755 ${srcdir}/build-php/modules/pdo_sqlite.so ${pkgdir}/${prefix}/usr/lib/php/modules/pdo_sqlite.so
}

package_php70-tidy() {
        pkgdesc='tidy module for PHP'
        depends=("php70=${pkgver}" 'tidyhtml')
        provides=("php70-tidy=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=tidy.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/tidy.ini
        install -D -m755 ${srcdir}/build-php/modules/tidy.so ${pkgdir}/${prefix}/usr/lib/php/modules/tidy.so
}

package_php70-xsl() {
        pkgdesc='xsl module for PHP'
        depends=("php70=${pkgver}" 'libxslt')
        provides=("php70-xsl=${pkgver}")

        install -d ${pkgdir}/${php_prefix}/etc/php/conf.d
        echo "extension=xsl.so" > ${pkgdir}/${php_prefix}/etc/php/conf.d/xsl.ini
        install -D -m755 ${srcdir}/build-php/modules/xsl.so ${pkgdir}/${prefix}/usr/lib/php/modules/xsl.so
}
